(set-logic QF_AUFBV)
(declare-fun v1 () (_ BitVec 16))
(declare-fun v5 () (_ BitVec 6))
(declare-fun bvlambda_1_ () (_ BitVec 1))
(declare-fun bvlambda_2_ () (_ BitVec 7))
(declare-fun bvlambda_3_ () (_ BitVec 1))
(declare-fun bvlambda_4_ () (_ BitVec 2))
(declare-fun bvlambda_5_ () (_ BitVec 1))
(declare-fun bvlambda_6_ () (_ BitVec 5))
(declare-fun bvlambda_7_ () (_ BitVec 2))
(declare-fun bvlambda_8_ () (_ BitVec 1))
(declare-fun a27 () (Array (_ BitVec 1) (_ BitVec 13)))
(declare-fun a28 () (Array (_ BitVec 5) (_ BitVec 11)))
(declare-fun a29 () (Array (_ BitVec 1) (_ BitVec 15)))
(assert
(let (($e1 (_ bv0 1)))
(let (($e2 (_ bv0 8)))
(let (($e3 (_ bv65462 16)))
(let (($e4 (_ bv242 8)))
(let (($e5 (_ bv6 3)))
(let (($e6 (_ bv0 5)))
(let (($e7 (_ bv0 11)))
(let (($e8 (_ bv0 2)))
(let (($e9 (_ bv72 15)))
(let (($e10 (_ bv10 5)))
(let (($e11 (_ bv32712 15)))
(let (($e12 (_ bv32754 15)))
(let (($e13 (_ bv0 13)))
(let (($e14 (_ bv0 9)))
(let (($e15 (_ bv0 15)))
(let (($e16 (_ bv8124 13)))
(let (($e30 (select a27 $e1)))
(let (($e31 (store a27 (bvnot $e1) (bvnot $e13))))
(let (($e32 (store $e31 bvlambda_8_ $e30)))
(let (($e33 (select $e32 (bvnot $e1))))
(let (($e34 ((_ extract 11 3) $e33)))
(let (($e35 (concat bvlambda_1_ bvlambda_1_)))
(let (($e36 (concat $e35 bvlambda_2_)))
(let (($e37 (bvudiv $e36 $e34)))
(let (($e38 (ite (= $e14 $e37) #b1 #b0)))
(let (($e39 (ite (= $e14 $e34) #b1 #b0)))
(let (($e40 (concat $e2 bvlambda_3_)))
(let (($e41 (concat $e40 bvlambda_4_)))
(let (($e42 (concat (bvnot $e2) bvlambda_3_)))
(let (($e43 (concat $e42 bvlambda_4_)))
(let (($e44 (ite (= #b1 bvlambda_3_) $e43 $e41)))
(let (($e45 (bvadd (bvnot v1) (bvnot $e3))))
(let (($e46 ((_ extract 12 2) $e45)))
(let (($e47 (concat $e6 v5)))
(let (($e48 (concat $e8 v5)))
(let (($e49 (bvudiv $e48 (bvnot $e4))))
(let (($e50 ((_ extract 5 1) $e49)))
(let (($e51 (store a28 $e50 $e47)))
(let (($e52 (store $e51 (bvnot $e10) $e46)))
(let (($e53 (store $e52 bvlambda_6_ $e44)))
(let (($e54 (select $e53 $e6)))
(let (($e55 (ite (= $e7 $e54) #b1 #b0)))
(let (($e56 (ite (= (bvnot $e7) $e54) #b1 #b0)))
(let (($e57 (ite (= $e8 bvlambda_7_) #b1 #b0)))
(let (($e58 (ite (= $e6 bvlambda_6_) #b1 #b0)))
(let (($e59 (bvand (bvnot bvlambda_5_) $e58)))
(let (($e60 (bvand $e59 $e57)))
(let (($e61 (ite (= (bvnot $e8) bvlambda_7_) #b1 #b0)))
(let (($e62 (ite (= (bvnot $e6) bvlambda_6_) #b1 #b0)))
(let (($e63 (bvand bvlambda_5_ $e62)))
(let (($e64 (bvand $e63 $e61)))
(let (($e65 (concat bvlambda_3_ bvlambda_4_)))
(let (($e66 (bvadd (bvnot $e5) (bvnot $e65))))
(let (($e67 ((_ extract 2 2) $e66)))
(let (($e68 (select a27 $e67)))
(let (($e69 (ite (bvult $e68 $e16) #b1 #b0)))
(let (($e70 ((_ extract 7 7) $e49)))
(let (($e71 (store a29 (bvnot $e1) $e11)))
(let (($e72 (store $e71 $e70 (bvnot $e12))))
(let (($e73 (select $e72 (bvnot $e1))))
(let (($e74 (ite (= $e73 $e15) #b1 #b0)))
(let (($e75 (ite (= $e73 (bvnot $e15)) #b1 #b0)))
(let (($e76 ((_ extract 8 8) $e45)))
(let (($e77 (store a29 $e76 $e9)))
(let (($e78 (select $e77 $e1)))
(let (($e79 (ite (= $e78 $e15) #b1 #b0)))
(let (($e80 (bvand (bvnot $e79) (bvnot $e75))))
(let (($e81 (bvand $e80 (bvnot $e74))))
(let (($e82 (bvand $e81 (bvnot $e69))))
(let (($e83 (bvand $e82 (bvnot $e64))))
(let (($e84 (bvand $e83 (bvnot $e60))))
(let (($e85 (bvand $e84 (bvnot $e56))))
(let (($e86 (bvand $e85 (bvnot $e55))))
(let (($e87 (bvand $e86 (bvnot $e39))))
(let (($e88 (bvand $e87 (bvnot $e38))))
 (not (= $e88 #b0))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(exit)
